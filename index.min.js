const cards=Array.from(document.querySelectorAll(".card")),gameTriesContainer=document.querySelector(".main__game-tries"),retryBtns=document.querySelectorAll(".restart-btn"),randomWordsContainer=Array.from(document.querySelectorAll(".card__side--back")),gameTime=document.querySelector(".main__game-time");let tries=0,timer=0;const words={A:2,B:2,C:2,D:2,E:2,F:2,G:2,H:2,I:2,J:2};function removeClasses(e,t){e.classList.remove("active"),t.classList.remove("active")}function getMatches(){return cards.filter(e=>e.classList.contains("active"))}function disableRest(){cards.forEach(e=>{e.classList.contains("active")||(e.querySelector(".card__side--front").disabled=!0)})}function enableRest(){cards.forEach(e=>{e.classList.contains("active")?e.classList.contains("match")&&(e.querySelector(".card__side--back").disabled=!0):e.querySelector(".card__side--front").disabled=!1})}function delayPressingCard(e,t){setTimeout(()=>{removeClasses(e,t),enableRest()},2e3)}function updateTries(){tries++,gameTriesContainer.textContent=tries}function getTrimmedWord(e){return e.querySelector(".card__side--back").textContent.trim()}function addMatchClass(e){e.classList.add("match")}function declareTheWinner(){const e=document.querySelector(".result"),t=document.querySelector(".result__winning-time-minutes"),n=document.querySelector(".result__winning-time-seconds"),r=document.querySelector(".result__winning-in-moves"),o=document.querySelector(".main__game-controls"),a=document.querySelector(".main__header");document.querySelector(".main__container").style.display="none",o.style.display="none",a.style.display="none",e.style.display="block",t.textContent=gameTime.textContent.trim().slice(0,2),n.textContent=gameTime.textContent.trim().slice(3),r.textContent=tries}function checkGameResult(){Array.from(document.querySelectorAll(".card")).every(e=>e.classList.contains("match"))&&declareTheWinner()}function checkResult(e){const t=e[0],n=e[1];getTrimmedWord(t)!==getTrimmedWord(n)?(delayPressingCard(t,n),updateTries()):(addMatchClass(t),addMatchClass(n),checkGameResult(),delayPressingCard(t,n),updateTries())}function checkMatch(){this.classList.contains("match")||this.classList.add("active");const e=getMatches();console.log(e),2===e.length&&(disableRest(),checkResult(e))}function padZero(e){return e.toString().padStart(2,"0")}function startTimer(){setInterval(()=>{let e=Math.floor(timer/60),t=Math.floor(timer%60);gameTime.textContent=`${padZero(e)}:${padZero(t)}`,timer++},1e3)}function removeRandomWords(){randomWordsContainer.forEach(e=>{e.innerHTML=""})}function getRandomNode(){return randomWordsContainer[Math.floor(Math.random()*randomWordsContainer.length)]}function checkCardsFullness(){return randomWordsContainer.every(e=>1===e.textContent.trim().length)}function getRandomKey(){const e=Object.keys(words);return e[Math.floor(Math.random()*e.length)]}function regenerateRandomWords(){for(;;){const e=getRandomNode(),t=getRandomKey(),n=checkCardsFullness();if(!e.textContent.trim()&&words[t]>0)words[t]--,e.textContent=t;else if(n)return}}function removeMatches(){document.querySelectorAll(".cards").forEach(e=>e.classList.remove("match"))}function loadTheGame(){startTimer(),removeRandomWords(),regenerateRandomWords()}function replay(){window.location.reload()}cards.forEach(e=>e.addEventListener("click",checkMatch)),window.addEventListener("DOMContentLoaded",loadTheGame),retryBtns.forEach(e=>e.addEventListener("click",replay));